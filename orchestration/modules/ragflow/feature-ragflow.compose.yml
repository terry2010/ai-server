networks:
  ai-server-net:
    external: true
services:
  ragflow:
    image: infiniflow/ragflow:v0.20.3-slim
    container_name: ai-ragflow
    restart: unless-stopped
    networks:
      - ai-server-net
    ports:
      - 127.0.0.1:18600:9380
    environment:
      - DOC_ENGINE=elasticsearch
      - SVR_HTTP_PORT=9381
      - ES_HOST=ai-elasticsearch
      - ES_PORT=9200
      - ELASTIC_PASSWORD=infini_rag_flow
      - REDIS_HOST=ai-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=1
      - MYSQL_HOST=ai-mysql
      - MYSQL_PORT=3306
      - MYSQL_DBNAME=rag_flow
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MINIO_HOST=ai-minio
      - MINIO_PORT=9000
      - MINIO_USER=rag_flow
      - MINIO_PASSWORD=infini_rag_flow
      - TZ=Asia/Shanghai
    volumes:
      - ./service_conf.yaml.template:/ragflow/conf/service_conf.yaml.template:ro
      - ./nginx-ragflow.conf:/etc/nginx/sites-available/ragflow:ro
      - ./custom-entrypoint.sh:/custom-entrypoint.sh:ro
    entrypoint:
      - /bin/bash
      - /custom-entrypoint.sh
    depends_on:
      mysql-init:
        condition: service_completed_successfully
    labels:
      com.ai.role: feature
      com.ai.module: ragflow
      com.ai.requires: mysql,redis,minio,elasticsearch
      com.ai.stack: ai-server
  mysql-init:
    image: mysql:8.0.36
    container_name: ai-ragflow-mysql-init
    networks:
      - ai-server-net
    environment:
      - MYSQL_HOST=ai-mysql
      - MYSQL_ROOT_PASSWORD=root
    command: |
      bash -c "
        echo 'Waiting for MySQL to be ready...'
        until mysql -hai-mysql -uroot -proot -e 'SELECT 1' > /dev/null 2>&1; do
          sleep 2
        done
        echo 'Creating rag_flow database if not exists...'
        mysql -hai-mysql -uroot -proot -e 'CREATE DATABASE IF NOT EXISTS rag_flow CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;'
        echo 'Database initialization completed.'
      "
    restart: 'no'
