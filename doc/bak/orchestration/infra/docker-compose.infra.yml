# Infra compose: 基础服务（可被多个模块共享）。
# 使用统一 external 网络与命名卷；此文件不负责创建这些 external 资源。

networks:
  ai-server-net:
    external: true

volumes:
  ai-server-mysql-data:
    external: true
  ai-server-redis-data:
    external: true
  ai-server-minio-data:
    external: true
  ai-server-es-data:
    external: true
  ai-server-postgres-data:
    external: true
  ai-server-qdrant-data:
  ai-server-logs:
    external: true

services:
  mysql:
    image: mysql:8.0.36
    container_name: ai-mysql
    restart: unless-stopped
    networks:
      - ai-server-net
    ports:
      - "${BIND_ADDRESS:-127.0.0.1}:${MYSQL_HOST_PORT:-13306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      # 默认创建供应用使用的数据库/用户（仅在第一次初始化空数据卷时生效）
      MYSQL_DATABASE: ${MYSQL_DATABASE:-oneapi}
      MYSQL_USER: ${MYSQL_USER:-oneapi}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-oneapi_pwd}
    command: ["mysqld", "--default-authentication-plugin=mysql_native_password"]
    volumes:
      - ai-server-mysql-data:/var/lib/mysql
      - ai-server-logs:/var/log/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -proot || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
    labels:
      com.ai.role: "basic"
      com.ai.service: "mysql"
      com.ai.stack: "ai-server"

  redis:
    image: redis:7.2-alpine
    container_name: ai-redis
    restart: unless-stopped
    networks:
      - ai-server-net
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "${BIND_ADDRESS:-127.0.0.1}:${REDIS_HOST_PORT:-16379}:6379"
    volumes:
      - ai-server-redis-data:/data
      - ai-server-logs:/var/log/redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 12
    labels:
      com.ai.role: "basic"
      com.ai.service: "redis"
      com.ai.stack: "ai-server"

  postgres:
    image: postgres:16
    container_name: ai-postgres
    restart: unless-stopped
    networks:
      - ai-server-net
    ports:
      - "${BIND_ADDRESS:-127.0.0.1}:${POSTGRES_HOST_PORT:-15432}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ai_server}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ai_server_123}
      POSTGRES_DB: ${POSTGRES_DB:-ai_server}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ai-server-postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ai_server} -d ${POSTGRES_DB:-ai_server} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
    labels:
      com.ai.role: "basic"
      com.ai.service: "postgres"
      com.ai.stack: "ai-server"

  minio:
    image: minio/minio:latest
    container_name: ai-minio
    restart: unless-stopped
    networks:
      - ai-server-net
    command: ["server", "/data", "--console-address", ":9001"]
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-rag_flow}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-infini_rag_flow}
    ports:
      - "${BIND_ADDRESS:-127.0.0.1}:${MINIO_HOST_PORT:-19000}:9000"
      - "${BIND_ADDRESS:-127.0.0.1}:${MINIO_CONSOLE_HOST_PORT:-19001}:9001"
    volumes:
      - ai-server-minio-data:/data
      - ai-server-logs:/var/log/minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 12
    labels:
      com.ai.role: "basic"
      com.ai.service: "minio"
      com.ai.stack: "ai-server"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: ai-elasticsearch
    restart: unless-stopped
    networks:
      - ai-server-net
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-infini_rag_flow}
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "${BIND_ADDRESS:-127.0.0.1}:${ES_HTTP_HOST_PORT:-19200}:9200"
      - "${BIND_ADDRESS:-127.0.0.1}:${ES_TRANSPORT_HOST_PORT:-19300}:9300"
    volumes:
      - ai-server-es-data:/usr/share/elasticsearch/data
      - ai-server-logs:/var/log/elasticsearch
    healthcheck:
      test: ["CMD-SHELL", "curl -k -u elastic:${ELASTIC_PASSWORD:-infini_rag_flow} https://localhost:9200 || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 20
    labels:
      com.ai.role: "basic"
      com.ai.service: "elasticsearch"
      com.ai.stack: "ai-server"

  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: ai-qdrant
    restart: unless-stopped
    networks:
      - ai-server-net
    ports:
      - "${BIND_ADDRESS:-127.0.0.1}:${QDRANT_HOST_PORT:-16333}:6333"
    volumes:
      - ai-server-qdrant-data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    healthcheck:
      test: ["CMD", "cat", "/proc/1/status"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 30s
    labels:
      com.ai.role: "basic"
      com.ai.service: "qdrant"
      com.ai.stack: "ai-server"
